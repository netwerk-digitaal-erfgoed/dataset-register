name: Build app and update Docker image

on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - run: npm ci

      - uses: nrwl/nx-set-shas@v4

      - run: npx nx affected -t docker:build --configuration=production

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

      - name: Build and publish Docker images
        run: npx nx release --dockerVersionScheme=production

      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Discover published Docker images
        id: vars
        run: |
          # Get all images published to our registry (recently created)
          IMAGES=$(docker image ls ghcr.io/netwerk-digitaal-erfgoed/dataset-register/* --format "{{.Repository}}:{{.Tag}}")
          
          if [ -z "$IMAGES" ]; then
            echo "‚ÑπÔ∏è No Docker images were published"
          else
            doctl kubernetes cluster kubeconfig save nde
            echo "üöÄ Deploying discovered images to Kubernetes..."
            
            # Deploy all images in parallel
            while IFS= read -r image; do
              case "$image" in
                *apps-api*)
                  echo "üöÄ Deploying registry-api: $image"
                  kubectl set image deployment/registry-api app=$image --record &
                  ;;
                *apps-crawler*)  
                  echo "üöÄ Deploying registry-crawler: $image"
                  kubectl set image deployment/registry-crawler app=$image --record &
                  ;;
                *)
                  echo "‚ö†Ô∏è Unknown image pattern: $image - skipping"
                  ;;
              esac
            done <<< "$IMAGES"
            
            # Verify all deployments
            echo "‚úÖ Verifying deployments..."
            kubectl rollout status deployment/registry-api deployment/registry-crawler 2>/dev/null || true
            echo "‚úÖ All deployments completed"
          fi
